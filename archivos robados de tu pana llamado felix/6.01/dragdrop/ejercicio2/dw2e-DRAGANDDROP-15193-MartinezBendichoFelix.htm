<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="styles.css">
    <title>Dragdrop 2</title>
</head>

<body>
    <script type="text/javascript">
        function crearContenedorElementos(nombreContenedor, nombreHijos, i) {
            var contenedorBookmarks = document.createElement("div");
            contenedorBookmarks.setAttribute("class", "contenedor-principal");
            contenedorBookmarks.id = "contenedor" + i;
            contenedorBookmarks.contadorBookmark = 0;
            document.body.appendChild(contenedorBookmarks);

            var tituloContenedor = document.createElement("div");
            tituloContenedor.innerHTML = nombreHijos;
            tituloContenedor.setAttribute("class", "azul contenedor-child");
            contenedorBookmarks.appendChild(tituloContenedor);

            // Caja para eliminar etiquetas
            var drop = document.createElement("div");
            drop.id = "drop" + i;
            drop.innerHTML = "[drop]";
            drop.setAttribute("class", "drop contenedor-child");
            contenedorBookmarks.appendChild(drop);

            var agregar = document.createElement("div");
            agregar.innerHTML = "[+]";
            agregar.setAttribute("class", "verde contenedor-child");
            agregar.addEventListener("click", function () {
                // Guardamos el indice para cada bookmark, el cual aumenta por cada eventListenner
                contenedorBookmarks.contadorBookmark += 1;
                var bookmark = document.createElement("div");
                bookmark.setAttribute("draggable", "true");
                bookmark.id = "bookmark" + contenedorBookmarks.contadorBookmark;
                bookmark.innerHTML = nombreHijos + contenedorBookmarks.contadorBookmark;
                bookmark.setAttribute("class", "crema contenedor-child");
                document.getElementById(("contenedor" + i)).insertBefore(bookmark, document.getElementById(("drop" + i)));

                /*
                    Element drag events (event.target)
                */

                bookmark.addEventListener("dragstart", function (event) {
                    // The dataTransfer.setData() method sets the data type and the value of the dragged data
                    event.dataTransfer.setData("text", event.target.id);
                    // Change the border of the dragable element
                    event.target.style.border = "1px solid grey";
                });

                // Output some text when finished dragging the p element and reset the opacity
                bookmark.addEventListener("dragend", function (event) {

                });

                // While dragging the element
                bookmark.addEventListener("drag", function (event) {

                });
            });

            contenedorBookmarks.appendChild(agregar);

            /*
                Drop target
            */

            // When the draggable element enters the droptarget
            drop.addEventListener("dragenter", function (event) {

            });

            // By default, data/elements cannot be dropped in other elements. To allow a drop, we must prevent the default handling of the element
            drop.addEventListener("dragover", function (event) {
                if (event.target.parentNode.id == drop.parentNode.id) {
                    event.preventDefault();
                }
            });

            // When the draggable element leaves the droptarget
            drop.addEventListener("dragleave", function (event) {

            });

            /* On drop - Prevent the browser default handling of the data (default is open as link on drop)
               Reset the color of the output text and DIV's border color
               Get the dragged data with the dataTransfer.getData() method
               The dragged data is the id of the dragged element ("drag1")
               Append the dragged element into the drop element
            */
            drop.addEventListener("drop", function (event) {
                event.preventDefault();
                var data = event.dataTransfer.getData("text");
                contenedorBookmarks.removeChild(document.getElementById(data));
            });
        }

        crearContenedorElementos("BOOKSMARKS", "Bookmark", "1");
    </script>
</body>

</html>